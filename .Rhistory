library(ggplot2)
library(ggplot2)
library(tidyverse)
timeseries <- matrix(rnorm(1000), nrow = 100)
FC_matrix <- cor(timeseries)
FC_matrix
diag(0, 10)
distance <- diag(0, 10)
distance[upper.tri(distance)] <- rnorm(45)
distance
distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance
seed(2022)
set.seed(2022)
timeseries <- matrix(rnorm(1000), nrow = 100)
FC_matrix <- cor(timeseries)
distance <- diag(0, 10)
distance[lower.tri(distance)] <- distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
FC_vec <- FC_matrix[upper.tri(FC_matrix)]
Dist_vec <- distance[upper.tri(Dist_vec)]
Dist_vec <- distance[upper.tri(distance)]
data2plot <- data.frame()
data2plot$FC_vec <- FC_matrix[upper.tri(FC_matrix)]
data2plot$Dist_vec <- distance[upper.tri(distance)]
data2plot <- data.frame(FC_vec = FC_matrix[upper.tri(FC_matrix)],
Dist_vec = distance[upper.tri(distance)])
data2plot
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE)
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "white")
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "white", lwd = 2)
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2)
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme_bw()
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme_bw() +
theme(axis.line = element_blank())
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme_bw() +
theme(axis.line = element_blank())
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme_bw() +
theme(panel.grid = element_blank())
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme_bw() +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank())
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(0) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
source("../scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
?upper.tri
FC_matrix[upper.tri(FC_matrix)] != FC_matrix[lower.tri(FC_matrix)]
FC_matrix[upper.tri(FC_matrix)]
FC_matrix[lower.tri(FC_matrix)]
isSymmetric(dim.FC)
isSymmetric(FC_matrix)
!isSymmetric(FC_matrix)
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
isSymmetric(distance)
distance
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
isSymmetric.matrix(distance)
if (!isSymmetric.matrix(round(Dist_matrix), 7)
warning("Dist_matrix is not symmetric. The upper triangle was used to plot.")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
isSymmetric.matrix(round(Dist_matrix, 7))
isSymmetric.matrix(round(distance, 7))
distance
round(distance, 7)
t(distance)[upper.tri(t(distance))] <- distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance[lower.tri(distance)] <- t(distance)[upper.tri(distance)]
distance
distance[lower.tri(distance), byrow = FALSE] <- distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance[lower.tri(distance), drop = TRUE] <- distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance[lower.tri(distance)] <- t(distance)[upper.tri(t(distance))] <- abs(rnorm(45, 1, 1))
distance <- diag(0, 10)
distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance  = distance + t(distance)
distance
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
source("../scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
title(paste0("Correlation = ", cor(Dist_vec, FC_vec))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("Correlation = ", cor(Dist_vec, FC_vec))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("Correlation = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2)
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = x, scrubs = z")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = x, scrubs = z")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = 00, scrubs = 00")
set.seed(2022)
timeseries <- matrix(rnorm(10000), nrow = 100)
FC_matrix <- cor(timeseries)
distance <- diag(0, 100)
distance[upper.tri(distance)] <- abs(rnorm(45, 1, 1))
distance  = distance + t(distance)
distance
dim(FC_matrix)
timeseries <- matrix(rnorm(10000), nrow = 1000)
FC_matrix <- cor(timeseries)
dim(FC_matrix)
timeseries <- matrix(rnorm(10000), nrow = 100)
FC_matrix <- cor(timeseries)
FC_matrix %>% din
FC_matrix %>% dim
dim(timeseries)
timeseries <- matrix(rnorm(100000), nrow = 100)
FC_matrix <- cor(timeseries)
dim(FC_matrix)
distance <- diag(0, 1000)
distance %>% dim
1000*999/2
set.seed(2022)
timeseries <- matrix(rnorm(100000), nrow = 100)
FC_matrix <- cor(timeseries)
distance <- diag(0, dim.mat)
dim.mat <- dim(FC_matrix)[1]
distance <- diag(0, dim.mat)
distance[upper.tri(distance)] <- abs(rnorm(dim.mat*(dim.mat-1)/2, 1, 1))
distance  = distance + t(distance)
data2plot <- data.frame(FC_vec = FC_matrix[upper.tri(FC_matrix)],
Dist_vec = distance[upper.tri(distance)])
source("../scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = 00, scrubs = 00")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = 00, scrubs = 00")
timeseries <- matrix(rnorm(1000), nrow = 100)
FC_matrix <- cor(timeseries)
dim.mat <- dim(FC_matrix)[1]
distance <- diag(0, dim.mat)
distance[upper.tri(distance)] <- abs(rnorm(dim.mat*(dim.mat-1)/2, 1, 1))
distance  = distance + t(distance)
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = 00, scrubs = 00")
timeseries <- matrix(rnorm(10000), nrow = 100)
FC_matrix <- cor(timeseries)
dim.mat <- dim(FC_matrix)[1]
distance <- diag(0, dim.mat)
distance[upper.tri(distance)] <- abs(rnorm(dim.mat*(dim.mat-1)/2, 1, 1))
distance  = distance + t(distance)
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = 00, scrubs = 00")
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
source("/mnt/tigrlab/scratch/jcyu/SPINS_SPASD/brainhack-2022-scrubbing/scripts/plot_DistFC.R")
?plot_DistFC
## This is how you source the function
source("../scripts/plot_DistFC.R")
? plot_DistFC
## and plot the results
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v")
set.seed(2022)
timeseries <- matrix(rnorm(10000), nrow = 100)
FC_matrix <- cor(timeseries)
dim.mat <- dim(FC_matrix)[1]
distance <- diag(0, dim.mat)
distance[upper.tri(distance)] <- abs(rnorm(dim.mat*(dim.mat-1)/2, 1, 1))
distance  = distance + t(distance)
data2plot <- data.frame(FC_vec = FC_matrix[upper.tri(FC_matrix)],
Dist_vec = distance[upper.tri(distance)])
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
is.data.frame(data2plot)
```{r}
data2plot <- data.frame(FC_vec = FC_matrix[upper.tri(FC_matrix)],
Dist_vec = distance[upper.tri(distance)])
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(data2plot, aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(data2plot, aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot$FC_vec
ggplot(data2plot, aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist_vec, FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist, y = FC)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(Dist, FC), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
data2plot %>%
ggplot(aes(x = Dist_vec, y = FC_vec)) +
geom_point() +
geom_smooth(se = FALSE, color = "red", lwd = 2) +
geom_hline(yintercept = 0) +
ggtitle(paste0("r = ", round(cor(data2plot$Dist_vec, data2plot$FC_vec), 2))) +
xlab("Distance") +
ylab("FC") +
theme(panel.grid = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
## and plot the results
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v") + ggtitle()
## This is how you source the function
source("../scripts/plot_DistFC.R")
## and plot the results
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v") + ggtitle()
## and plot the results
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v")
## and plot the results
plot_DistFC(FC_matrix = FC_matrix,
Dist_matrix = distance,
color.line = "red", lwd.line = 2,
title = "FD threshold = w, scrubs = v") +
theme(title = element_blank())
heatmap(FC_matrix)
heatmap(FC_matrix)
heatmap(FC_matrix, Rowv = NA, Colv = NA)
heatmap(distance, Rowv = NA, Colv = NA)
heatmap(distance, Rowv = NA, Colv = NA)
